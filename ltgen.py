#!/usr/bin/env python
#-- coding: utf-8 --

import os
import argparse
import xml.etree.ElementTree as ET

if __name__ == '__main__':
    # accept the file name from the shell
    par = argparse.ArgumentParser(description='Convert a structure file generated by avogadro to a moltemplate input file.')
    par.add_argument('file_names', metavar='File-Name', nargs='*', default=[], type=str, help='Name of the structure file generated by avogadro, it will convert all *.cml files if no file name specified')
    par.add_argument('--ff', dest='forcefield', default='oplsaa', type=str, help='Name of force field used, default is OPLSAA')
    args = par.parse_args()
    if not args.file_names:
        args.file_names = [tmp.split()[-1] for tmp in os.popen("ls -l |grep '\<.*\.cml\>'").read().splitlines()]

    # read the *.cml file from avogadro
    for file_name in args.file_names:
        # open a *.lt file to write for moltemplate
        main_name = file_name.split('.')[0] # extract the main name of the file.
        mol = ET.parse(file_name).getroot() # parse the *.cml file using xml parser.
        with open('%s.lt' % main_name, 'w') as lt_fh:
            lt_fh.writelines(["import %s.lt\n" % args.forcefield, "\n", "%s inherits %s {\n" % (main_name, args.forcefield.upper()), "\n", "    # atom-id mol-id atom-type charge X Y Z # comments\n", "   write(\"Data Atoms\") {\n"])  # write the headlines of *.lt file

            # write the atom list of the *.lt file
            for atom in mol[0]:
                lt_fh.write('        $atom:%s  $mol:...  @atom:  0.00  %s  %s  %s  # %s\n' % (atom.attrib['id'], atom.attrib['x3'], atom.attrib['y3'], atom.attrib['z3'], atom.attrib['elementType']))
            lt_fh.writelines(["    }\n", "\n", "    # bond-id atom-id1 atom-id2\n", "    write(\"Data Bond List\") {\n"])

            # write the bond list of the *.lt file
            for i, bond in enumerate(mol[1]):
                bond_atom_indices = bond.attrib['atomRefs2'].split(' ')
                lt_fh.write('        $bond:b%d  $atom:%s  $atom:%s  # order:%s\n' % (i, bond_atom_indices[0], bond_atom_indices[1], bond.attrib['order']))
            lt_fh.writelines(["    }\n", "}\n"])
